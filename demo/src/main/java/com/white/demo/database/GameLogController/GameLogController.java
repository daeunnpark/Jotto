package com.white.demo.database.GameLogController;

import com.white.demo.database.Repositories.GameLogRepository;

import com.white.demo.database.model.GameLog;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.Date;
@Controller    // This means that this class is a Controller
@RequestMapping(path="/log") // This means URL's start with /demo (after Application path)
public class GameLogController {
    @Autowired // This means to get the bean called userRepository





        // Which is auto-generated by Spring, we will use it to handle the data

        private GameLogRepository logRepository;

        Date d = new Date();

        public static int logCount = 0;



        @GetMapping(path="/addGameLog") // Map ONLY GET Requests
        public @ResponseBody String addNewGameLog (@RequestParam String username, @RequestParam int game_ID,
                                                   @RequestParam String word, @RequestParam int letterCount) {
            // @ResponseBody means the returned String is the response, not a view name
            // @RequestParam means it is a parameter from the GET or POST request


            GameLog l = new GameLog();
            l.setUsername(username);
            l.setGame_ID(game_ID);
            l.setDate(d.toGMTString());
            l.setWord(word);
            l.setLetterCount(letterCount);
            this.logRepository.save(l);
            return "LogCount : " + logCount++;

        }




        @GetMapping(path="/allGameLog")
        public @ResponseBody Iterable<GameLog> getAllGameLog() {
            // This returns a JSON or XML with the users
            return logRepository.findAll();
        }




}
